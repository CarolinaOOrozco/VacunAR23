/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoDatos.*;
import entidades.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carol
 */
public class ConfirmarCitas extends javax.swing.JInternalFrame {

    DefaultTableModel modelo =new DefaultTableModel();
    
    public boolean inCellEditable(int fila,int columna){
        if(columna<=4){
            return false;
        }else
            return true;
    }
    /**
     * Creates new form ConfirmarCitas
     */
    public ConfirmarCitas() {
        initComponents();
        cargarCabecera();
        cargarComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaCitas = new javax.swing.JTable();
        jBConfirmarCita = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setText("CITAS DE HOY");

        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Centro de vacunación");

        jTablaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablaCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaCitasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablaCitas);

        jBConfirmarCita.setText("Confimar como concretada");
        jBConfirmarCita.setEnabled(false);
        jBConfirmarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConfirmarCitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel2)
                .addGap(43, 43, 43)
                .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(304, 304, 304))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBConfirmarCita)
                .addGap(259, 259, 259))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(jBConfirmarCita)
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablaCitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaCitasMouseClicked
        if(jTablaCitas.getValueAt(jTablaCitas.getSelectedRow(), 6).equals(null)){
            jBConfirmarCita.setEnabled(true);
        }
    }//GEN-LAST:event_jTablaCitasMouseClicked

    private void jBConfirmarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConfirmarCitaActionPerformed
        int fila=jTablaCitas.getSelectedRow();
        VacunaData vd=new VacunaData();
        Vacuna v=(Vacuna)vd.vacunasDisponibles().get(0);
        CitaVacunacionData cvd=new CitaVacunacionData();
        if((int)jTablaCitas.getValueAt(fila, 6)==1){
            CiudadanoData cd=new CiudadanoData();
            Ciudadano c=cd.buscarPorDni((int)jTablaCitas.getValueAt(fila, 1));
            LocalDateTime t=cvd.turnoPara4semanas();
            String centroV=(String)jComboBox.getSelectedItem();
            CitaVacunacion cv=new CitaVacunacion(c,2,t,centroV,false);
            cvd.nuevaCita(cv);
        }else if((int)jTablaCitas.getValueAt(fila, 6)==2){
            CiudadanoData cd=new CiudadanoData();
            Ciudadano c=cd.buscarPorDni((int)jTablaCitas.getValueAt(fila, 1));
            LocalDateTime t=cvd.turnoPara4semanas();
            String centroV=(String)jComboBox.getSelectedItem();
            CitaVacunacion cv=new CitaVacunacion(c,3,t,centroV,false);
            cvd.nuevaCita(cv);
        }
        jTablaCitas.setValueAt(v.getNroSerieDosis(), fila,5);
        Integer codigo=(Integer)jTablaCitas.getValueAt(fila, 4);
        LocalDateTime fechaHora=(LocalDateTime)jTablaCitas.getValueAt(fila, 2);
        cvd.citaVacunacionConcretada(codigo,fechaHora, v);
        vd.marcarComoAplicada(v.getNroSerieDosis());
        jBConfirmarCita.setEnabled(false);
    }//GEN-LAST:event_jBConfirmarCitaActionPerformed

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed
        borrarFilas();
        String centroVacunacion=(String)jComboBox.getSelectedItem();
        CitaVacunacionData cvd=new CitaVacunacionData();
        ArrayList <CitaVacunacion> vacunacionesHoy=cvd.vacunacionesDiarias(centroVacunacion,LocalDate.now());
        for(CitaVacunacion cv:vacunacionesHoy){
            modelo.addRow(new Object[]{cv.getCiudadano().getNombreCompleto(),cv.getCiudadano().getDni(),cv.getFechaHoraCita(),cv.getCentroVacunacion(),cv.getCodigoCita(),cv.getVacuna().getNroSerieDosis(),cv.getCodRefuerzo()});
        }
    }//GEN-LAST:event_jComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConfirmarCita;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaCitas;
    // End of variables declaration//GEN-END:variables

    public void cargarCabecera(){
        modelo.addColumn("Nombre y apellido");
        modelo.addColumn("DNI");
        modelo.addColumn("Fecha-hora");
        modelo.addColumn("Centro de vacunación");
        modelo.addColumn("Código cita");
        modelo.addColumn("Vacuna-N° de serie");
        modelo.addColumn("Código de refuerzo");
        jTablaCitas.setModel(modelo);
    }
    
    private void borrarFilas(){
        int f=jTablaCitas.getRowCount()-1;      
        for(;f>=0;f--){
            modelo.removeRow(f);
        }
    }
    
    public void cargarComboBox(){
        
    }
}
